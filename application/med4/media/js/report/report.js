/*
 * AlcedisMED
 * Copyright (C) 2010-2016  Alcedis GmbH
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */ 

$(function(){    if($('table.bfl').size() == 0) {      loadCookieFilter(false);    }    initReport();    $('input[type="submit"]').click(function(){    	$('input[name="start_report"]').unbind().addClass('button-disabled');    });});function initReport(){    $(document).keypress(function(e) {        if(e.which == 13) {            $('input[name="start_report"]').trigger('click');        }    });    $('.formtable :input').keypress(function(e) {        if(e.which == 13) {            $('input[name="start_report"]').trigger('click');        }    });	$('input.report').unbind('click').click(function(){		startReport($(this).attr('alt'), true);		return false;	});	$('input[name="start_report"]').unbind('click').removeClass('button-disabled').click(function(){		var newCookieArr = createFilterCookie(true, getPageInfo().page, true);        document.cookie = (newCookieArr && newCookieArr.length > 0) ? ('filter=' + newCookieArr + ';') : ('filter=""; expires=Thu, 01-Jan-70 00:00:01 GMT;');		startReport(null, false, $(this).attr('alt'));	});    $('input[type="submit"]').removeAttr('disabled').removeClass('button-disabled');    $('.colorSelector').each(function(){    	var cSelectorName = $(this).attr('id');    	$(this).ColorPicker({    		color: $('input[name="' + cSelectorName + '"]').val(),        	onShow: function (colpkr) {        		$(colpkr).fadeIn(500);        		return false;        	},        	onHide: function (colpkr) {        		$(colpkr).fadeOut(500);        		var newCookieArr = createFilterCookie(true, getPageInfo().page, true);                document.cookie = (newCookieArr && newCookieArr.length > 0) ? ('filter=' + newCookieArr + ';') : ('filter=""; expires=Thu, 01-Jan-70 00:00:01 GMT;');        		return false;        	},        	onChange: function (hsb, hex, rgb) {        		$('#' + cSelectorName).css('backgroundColor', '#' + hex);        		$('input[name="' + cSelectorName + '"]').val('#' + hex);        	}        });    });}function openReportDialog(param, curPage, dontConvertHref, debug){	_reportLoadAnimation = true;	startAnimation();	$('#report-dialog').dialog({	    modal         : true,	    position      : ['center', 100],	    draggable     : false,	    width         : 300,	    dialogClass   : 'ui-dialog-report',	    height        : 200,	    closeOnEscape : false,	    resizable     : false,	    close         : resetReport,	    open          : function() {	        $('.ui-dialog-report .ui-dialog-titlebar-close').hide();	        $('.close-dialog').click(function(){	            $('#report-dialog').dialog('close');	        });	        var data = {ajax : true, 'action' : 'report'};                $.each($(':input', '.reportfilter'), function(index, currentFilter) {                    var type = $(currentFilter).attr('type');                    var val = '';                    if (typeof type !== 'undefined' && type !== false) {                        if (type === 'checkbox') {                            val = ($(currentFilter).is(':checked') ? 1 : '');                        } else {                            val = $(currentFilter).val();                        }                    } else {                        val = $(currentFilter).val();                    }                    data[$(currentFilter).attr('name')] = val;                 });	        $.each($("input[name^='chart_']"), function(index, currentFilter) {	        	data[$(currentFilter).attr('name')] = $(currentFilter).attr('value');	 	    });	        param = param || null;	        if (param !== null) {	        	data['report'] = param;	        }	        dontConvertHref = dontConvertHref || false;	        $.ajax({	            url      : curPage,	            type     : 'post',	            dataType : 'text',	            data     : data,                timeout  : 0,	            error    : function() {	        		$('.ui-dialog-report .ui-dialog-titlebar-close').fadeIn();	        	   },	            success  : function(data) {	        		try {	                    jsonData = JSON.parse(data);	                } catch (e) {	                    jsonData = {};	                }	                var response = jsonData.success || false,	                    file     = jsonData.file    || false,	                    debug    = jsonData.debug   || false                    ;	                _reportLoadAnimation = false;	                if (response == true) {	                    $('#report-dialog').dialog('close');	                    location.href = (dontConvertHref == false ? curPage + '&action=download&file=' : '') + file;	                } else {	                    $('#report-loading').fadeOut('fast', function(){	                    	$('#report-error').fadeIn('fast');	                        $('.ui-dialog-report .ui-dialog-titlebar-close').fadeIn();	                    });	                }	            },	            dataFilter: function (data) {	               checkSessionExpired(data, this);	               return data;	            }	        });	    }	});}function startReport(param, dontConvertHref, debug){    var       curPage = location.href,    	 debug   = debug || false,    	 pageInfo = getPageInfo()    ;    if (pageInfo.pageName == 'report') {       $('input[name="start_report"]').unbind().addClass('button-disabled');       $('input[type="submit"]').attr('disabled','disabled').addClass('button-disabled');       var filterParam  = {};       $.each($(':input', '.reportfilter'), function(index, currentFilter) {          var type = $(currentFilter).attr('type');          var val = '';          if (typeof type !== 'undefined' && type !== false) {              if (type === 'checkbox') {                  val = ($(currentFilter).is(':checked') ? 1 : '');              } else {                  val = $(currentFilter).val();              }          } else {              val = $(currentFilter).val();          }          filterParam["filter-" + $(currentFilter).attr('name')] = val;       });       filterParam['action'] = "getparsetime";       $.ajax({           url      : curPage,           type     : 'post',           dataType : 'text',           data     : filterParam,           timeout  : 250000,           success  : function(data) {       		if (data.length > 0) {       		   $('#parse-time').empty().append(data);           	   $('#parse-time-container').show();       		}       		openReportDialog(param, curPage, dontConvertHref, debug);       	},       	error    : function(){       		openReportDialog(param, curPage, dontConvertHref, debug);       	},         dataFilter: function (data) {            checkSessionExpired(data, this);            return data;         }       });    } else {       openReportDialog(param, curPage, dontConvertHref, debug);    }}function resetReport(){    $('#report-error').hide();    $('#report-loading').show();	$('#parse-time').empty();	$('#parse-time-container').hide();   initReport();}function startAnimation(){    $('#loading-info').fadeIn(function(){        $('#loading-info').fadeOut(function(){            if (_reportLoadAnimation) {                startAnimation();            }        });    });}