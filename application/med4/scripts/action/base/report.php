<?php/*
 * AlcedisMED
 * Copyright (C) 2010-2016  Alcedis GmbH
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */ 

$user = $_SESSION['sess_loginname'];switch ($action) {    case 'getparsetime':        $time = null;        if ($name !== 'query') {            $checkParam = array();            foreach (array_keys($_REQUEST) as $param) {                if (strpos($param, 'filter-') !== false) {                    $value = $_REQUEST[$param];                    $param = substr($param, 7);                    $checkParam[$param] =  $value;                }            }            $checkParam['report'] = $name;            require_once ('core/class/report/time.php');            $time = reportTime::create($db)                ->setParams($checkParam)                ->read()                ->getTime()            ;        }        echo $time;        exit;        break;   case 'download':       $file = isset($_REQUEST['file']) ? $_REQUEST['file'] : null;       if ($file !== null) {            $path = "material/{$user}/{$file}";            if (secure::filePath($path, $user) === true) {                $type = mimeType::getMimeTypeFromFile($file);                download::create($path, $type)                    ->output()                ;            }        }        break;   case 'report' :        empty_user_dir($user);        $params = array_merge(            $_REQUEST,            array(               'org_name' => isset($_SESSION['sess_org_name']) ? $_SESSION['sess_org_name'] : '',               'org_ort'  => isset($_SESSION['sess_org_ort'])  ? $_SESSION['sess_org_ort']  : '',               'org_id'   => isset($_SESSION['sess_org_id'])   ? $_SESSION['sess_org_id']   : '',            )         );         //Custom Report pse extension         $directReportRender = false;         $customReportScriptPath = "reports/scripts/{$sub}/{$name}.php";         if (is_file($customReportScriptPath) === true) {            include_once $customReportScriptPath;         }         //generiert file und gibt den pfad zurück         $report = report::create($db, $smarty, $params)            ->setType($type)            ->setName($name)            ->setUser($user)         ;         if ($name === 'query') {             $id = isset($_REQUEST['id']) === true ? $_REQUEST['id'] : null;             //Set Package dir if package exist             if (strlen(dlookup($db, 'vorlage_query', 'package', "vorlage_query_id = '{$id}'")) > 0) {                 $report                    ->setPackageDir(upload::create($smarty)->getUploadDir() . 'doc/queries')                    ->load()                    ->saveFile()                ;             } else {                 $report                    ->load()                    ->render() //inherits exit                 ;             }         } else {             $report                ->setSubDir($sub)                ->load()             ;             if ($directReportRender === false) {                 $report->saveFile();             } else {                 $report->render();             }         }         echo json_encode(            array(               'success'   => true,               'file'      => utf8_encode($report->getFileName())             )         );         exit;         break;     case 'cancel' :         empty_user_dir($user);         action_cancel(get_url('page=auswertungen'));         break; }?>