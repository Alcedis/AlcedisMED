<?php/*
 * AlcedisMED
 * Copyright (C) 2010-2016  Alcedis GmbH
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */ 

class reportContentKh04 extends reportExtensionKh{    /**     * _values     *     * @access  protected     * @var     array     */    protected $_values = array();    /**     * _types     *     * @access  protected     * @var     array     */    protected $_types = array('alle', 'mund', 'skht');    /**     * _activeTypes     *     * @access  protected     * @var     array     */    protected $_activeTypes = array('alle' => 1);    /**     * report init     *     * @param $renderer     */    public function init($renderer){        if ($this->_params['name'] == 'kh04') {            $renderer->addPage('L');        }    }    /**     * init values     *     */    private function _initValues()    {        foreach ($this->_types as $type) {            $this->_values['041_uicc'][$type]  = array('type' => 'uicc', 'range' => array(), 'event' => array(), 'legend' => array());            $this->_values['041_pt'][$type]    = array('type' => 'pt',   'range' => array(), 'event' => array(), 'legend' => array());            $this->_values['042_uicc'][$type]  = array('type' => 'uicc', 'range' => array(), 'event' => array(), 'legend' => array());            $this->_values['042_pt'][$type]    = array('type' => 'pt',   'range' => array(), 'event' => array(), 'legend' => array());            $this->_values['043_uicc'][$type]  = array('type' => 'uicc', 'range' => array(), 'event' => array(), 'legend' => array());            $this->_values['043_pt'][$type]    = array('type' => 'pt',   'range' => array(), 'event' => array(), 'legend' => array());            $this->_values['044_uicc'][$type]  = array('type' => 'uicc', 'range' => array(), 'event' => array(), 'legend' => array());            $this->_values['044_pt'][$type]    = array('type' => 'pt',   'range' => array(), 'event' => array(), 'legend' => array());            $this->_values['045'][$type]       = array('range' => array(), 'event' => array());        }    }    /**     *     * generate     * @param $renderer     */    public function generate($renderer)    {        $config = $this->loadConfigs('kh04', false, true);        $this->_initValues();        $additionalContent['joins'] = array(            "LEFT JOIN `status` snachsorge ON snachsorge.patient_id = sit.patient_id AND snachsorge.form = 'nachsorge' AND LOCATE(CONCAT_WS('','-',sit.erkrankung_id,'-'), s.report_param) > 0",                "LEFT JOIN nachsorge nnachsorge ON nnachsorge.nachsorge_id = snachsorge.form_id"        );        $additionalContent['selects'] = array(            "MAX(t2.datum_sicherung) AS 'lastTumorstatus'",            "MIN(IF(LEFT(t2.anlass, 1) = 'r', t2.datum_sicherung, NULL)) AS 'datum_sicherung_rezidiv'",            "MIN(IF(LEFT(t2.anlass, 1) = 'r' AND (t2.rezidiv_lokal = 1 OR t2.rezidiv_lk = 1), t2.datum_sicherung, NULL)) AS 'datum_sicherung_rezidiv_lokal'",            "MIN(IF(LEFT(t2.anlass, 1) = 'r' AND t2.rezidiv_metastasen = 1, t2.datum_sicherung, NULL)) AS 'datum_sicherung_rezidiv_metast'",            "(SELECT ts.datum_sicherung   FROM tumorstatus ts WHERE p.patient_id = ts.patient_id ORDER BY ts.datum_sicherung DESC LIMIT 1) AS latest_tumorstatus"        );        $additionalContent['fields'] = array(            "UNIX_TIMESTAMP(MIN(h.datum))                               AS 'h_beginn'",            "IF(MAX(x.todesdatum) IS NOT NULL, 1, 0)                    AS '041_ereignis'",            "IF(                MAX(x.todesdatum) IS NOT NULL,                UNIX_TIMESTAMP(MAX(x.todesdatum)),                CONCAT_WS('|',                    UNIX_TIMESTAMP(MAX(sit.latest_tumorstatus)),                    UNIX_TIMESTAMP(MAX(nnachsorge.datum))                )            )                                                           AS '041_ende'",            "IF(sit.datum_sicherung_rezidiv IS NOT NULL, 1, 0)          AS '042_ereignis'",            "IF(                sit.datum_sicherung_rezidiv IS NOT NULL,                UNIX_TIMESTAMP(sit.datum_sicherung_rezidiv),                CONCAT_WS('|',                    UNIX_TIMESTAMP(MAX(x.todesdatum)),                    UNIX_TIMESTAMP(MAX(sit.lastTumorstatus)),                    UNIX_TIMESTAMP(MAX(nnachsorge.datum))                )            )                                                           AS '042_ende'",            "IF(sit.datum_sicherung_rezidiv_lokal IS NOT NULL, 1, 0)    AS '043_ereignis'",            "IF(                sit.datum_sicherung_rezidiv_lokal IS NOT NULL,                UNIX_TIMESTAMP(sit.datum_sicherung_rezidiv_lokal),                CONCAT_WS('|',                    UNIX_TIMESTAMP(MAX(x.todesdatum)),                    UNIX_TIMESTAMP(MAX(sit.lastTumorstatus)),                    UNIX_TIMESTAMP(MAX(nnachsorge.datum))                )            )                                                           AS '043_ende'",            "IF(sit.datum_sicherung_rezidiv_metast IS NOT NULL, 1, 0)   AS '044_ereignis'",            "IF(                sit.datum_sicherung_rezidiv_metast IS NOT NULL,                UNIX_TIMESTAMP(sit.datum_sicherung_rezidiv_metast),                CONCAT_WS('|',                    UNIX_TIMESTAMP(MAX(x.todesdatum)),                    UNIX_TIMESTAMP(MAX(sit.lastTumorstatus)),                    UNIX_TIMESTAMP(MAX(nnachsorge.datum))                )            )                                                           AS '044_ende'",            "IF(MAX(x.todesdatum) IS NOT NULL, 1, 0)                    AS '045_ereignis'",            "UNIX_TIMESTAMP(sit.datum_sicherung_rezidiv)                AS '045_beginn'",            "IF(                MAX(x.todesdatum) IS NOT NULL,                UNIX_TIMESTAMP(MAX(x.todesdatum)),                CONCAT_WS('|',                    UNIX_TIMESTAMP(MAX(sit.lastTumorstatus)),                    UNIX_TIMESTAMP(MAX(nnachsorge.datum))                )            )                                                           AS '045_ende'",            "CASE TRUE                WHEN SUBSTR(sit.pt, 3,2) = 'is' THEN 'pTis'                WHEN SUBSTR(sit.pt, 3,1) = '0' THEN 'pT0'                WHEN SUBSTR(sit.pt, 3,1) = '1' THEN 'pT1'                WHEN SUBSTR(sit.pt, 3,1) = '2' THEN 'pT2'                WHEN SUBSTR(sit.pt, 3,1) = '3' THEN 'pT3'                WHEN SUBSTR(sit.pt, 3,1) = '4' THEN 'pT4'             ELSE                NULL             END                                                        AS 'pt_section'"        );        if ($this->_params['name'] == 'kh04_1') {            foreach ($additionalContent['fields'] as $fieldIndex => $cond) {                $additionalContent['fields'][$fieldIndex] = str_replace('UNIX_TIMESTAMP', '', $cond);            }            $additionalContent['fields'][] = 'sit.patient_nr';            $additionalContent['fields'][] = 'null as addon';        }        $records = $this->loadRessource('kh01', $additionalContent);        $reportSection = array('pt', 'uicc');        foreach ($records as $i => $record) {            $diagnoseType = $this->_getDiagnoseType($record);            if ($record['primaerfall'] == '1' && $diagnoseType !== null) {                $hBeginn = $record['h_beginn'];                $records[$i]['addon'] = $tmp = array(                    '041_ereignis'  => $record['041_ereignis'],                    '041_beginn'    => $hBeginn,                    '041_ende'      => $this->_getLastDate($record['041_ende']),                    '042_ereignis'  => $record['042_ereignis'],                    '042_beginn'    => $hBeginn,                    '042_ende'      => $this->_getLastDate($record['042_ende']),                    '043_ereignis'  => $record['043_ereignis'],                    '043_beginn'    => $hBeginn,                    '043_ende'      => $this->_getLastDate($record['043_ende']),                    '044_ereignis'  => $record['044_ereignis'],                    '044_beginn'    => $hBeginn,                    '044_ende'      => $this->_getLastDate($record['044_ende']),                    '045_ereignis'  => $record['045_ereignis'],                    '045_beginn'    => $record['045_beginn'],                    '045_ende'      => $this->_getLastDate($record['045_ende']),                    'diagnosetyp'   => $diagnoseType,                    'pt'            => $record['pt_section'],                    'uicc'          => $this->_getUiccSection($record['uicc'])                );                $this->_activeTypes[$diagnoseType] = 1;                foreach (array('alle', $diagnoseType) as $diagnoseType) {                    foreach ($reportSection as $section) {                        if (strlen($tmp[$section]) > 0) {                            //Dauer berechnen                            for ($i=1;$i<=4; $i++) {                                if (strlen($tmp["04{$i}_beginn"]) > 0 && strlen($tmp["04{$i}_ende"]) > 0) {                                    $value = ($tmp["04{$i}_ende"] - $tmp["04{$i}_beginn"]) / 86400 / 30.4375;                                    $tmp["04{$i}_dauer_{$section}"][$diagnoseType] = $value;                                } else {                                    $tmp["04{$i}_dauer_{$section}"][$diagnoseType] = null;                                }                                if (strlen($tmp["04{$i}_dauer_{$section}"][$diagnoseType]) > 0) {                                    $this->_values["04{$i}_{$section}"][$diagnoseType]['range'][]  = $tmp["04{$i}_dauer_{$section}"][$diagnoseType];                                    $this->_values["04{$i}_{$section}"][$diagnoseType]['event'][]  = $tmp["04{$i}_ereignis"];                                    $this->_values["04{$i}_{$section}"][$diagnoseType]['legend'][] = $tmp[$section];                                }                            }                        }                    }                    $tmp["045_dauer"] = (strlen($tmp["045_beginn"]) > 0 && strlen($tmp["045_ende"]) > 0) === true                        ? ($tmp["045_ende"] - $tmp["045_beginn"]) / 86400 / 30.4375                        : null                    ;                    if ($tmp["045_dauer"] !== null) {                        $this->_values["045"][$diagnoseType]['range'][] = $tmp["045_dauer"];                        $this->_values["045"][$diagnoseType]['event'][] = $tmp["045_ereignis"];                    }                }            } else {                unset($records[$i]);            }        }        switch ($this->_params['name']) {            case 'kh04':                require_once 'reports/pdf/kh/kh04/p1.php';                break;            case 'kh04_1':                $this->_data = $this->_convertKh041ReportData($records);                $this->writeXLS('kh01');                break;        }    }    /**     * _getDiagnoseType     *     * @access  protected     * @param   array  $record     * @return  string     */    protected function _getDiagnoseType($record)    {        $value = null;        if ($this->checkMundhoehle($record) === true) {            $value = 'mund';        } else if ($this->checkSonstige($record) === true) {            $value = 'skht';        }        return $value;    }}?>