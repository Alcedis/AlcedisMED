<?php/*
 * AlcedisMED
 * Copyright (C) 2010-2016  Alcedis GmbH
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */ 

class reportContentD04 extends reportExtensionD{    private $_patientDatasets   = array();    protected $_values          = array();    /**     * report init     *     * @param $renderer     */    public function init($renderer){        if ($this->_params['name'] == 'd04') {            $renderer->addPage('L');        }    }    /**     * init values     *     */    private function _initValues()    {        $this->_values['041'] = array('type' => 'uicc', 'range' => array(), 'event' => array(), 'legend' => array());        $this->_values['042'] = array('type' => 'uicc', 'range' => array(), 'event' => array(), 'legend' => array());        $this->_values['043'] = array('type' => 'uicc', 'range' => array(), 'event' => array(), 'legend' => array());        $this->_values['044'] = array('type' => 'uicc', 'range' => array(), 'event' => array(), 'legend' => array());        $this->_values['045'] = array('range' => array(), 'event' => array());    }    /**     *     * generate     * @param $renderer     */    public function generate($renderer)    {        $config = $this->loadConfigs('d04', false, true);        $this->_initValues();        $additionalContent['joins'] = array(            "LEFT JOIN `status` snachsorge ON snachsorge.patient_id = sit.patient_id AND snachsorge.form = 'nachsorge' AND LOCATE(CONCAT_WS('','-',sit.erkrankung_id,'-'), s.report_param) > 0",                "LEFT JOIN nachsorge nnachsorge ON nnachsorge.nachsorge_id = snachsorge.form_id"        );        $additionalContent['selects'] = array(            "MAX(t2.datum_sicherung) AS 'lastTumorstatus'",            "MIN(IF(LEFT(t2.anlass, 1) = 'r', t2.datum_sicherung, NULL)) AS 'datum_sicherung_rezidiv'",            "MIN(IF(LEFT(t2.anlass, 1) = 'r' AND (t2.rezidiv_lokal = 1 OR t2.rezidiv_lk = 1), t2.datum_sicherung, NULL)) AS 'datum_sicherung_rezidiv_lokal'",            "MIN(IF(LEFT(t2.anlass, 1) = 'r' AND t2.rezidiv_metastasen = 1, t2.datum_sicherung, NULL)) AS 'datum_sicherung_rezidiv_metast'"        );        $additionalContent['fields'] = array(            "sit.patient_id",            "UNIX_TIMESTAMP(                IFNULL(                    MIN(IF(s.form = 'eingriff' AND LEFT(s.report_param, 1) = '1', s.form_date, NULL)),                    MIN(h.datum)                )            )                                                           AS 'h_beginn'",            "IF(MAX(x.todesdatum) IS NOT NULL, 1, 0)                    AS '041_ereignis'",            "IF(                MAX(x.todesdatum) IS NOT NULL,                UNIX_TIMESTAMP(MAX(x.todesdatum)),                CONCAT_WS('|',                    UNIX_TIMESTAMP(MAX(sit.lastTumorstatus)),                    UNIX_TIMESTAMP(MAX(nnachsorge.datum))                )            )                                                           AS '041_ende'",            "IF(sit.datum_sicherung_rezidiv IS NOT NULL, 1, 0)          AS '042_ereignis'",            "IF(                sit.datum_sicherung_rezidiv IS NOT NULL,                UNIX_TIMESTAMP(sit.datum_sicherung_rezidiv),                CONCAT_WS('|',                    UNIX_TIMESTAMP(MAX(x.todesdatum)),                    UNIX_TIMESTAMP(MAX(sit.lastTumorstatus)),                    UNIX_TIMESTAMP(MAX(nnachsorge.datum))                )            )                                                           AS '042_ende'",            "IF(sit.datum_sicherung_rezidiv_lokal IS NOT NULL, 1, 0)    AS '043_ereignis'",            "IF(                sit.datum_sicherung_rezidiv_lokal IS NOT NULL,                UNIX_TIMESTAMP(sit.datum_sicherung_rezidiv_lokal),                CONCAT_WS('|',                    UNIX_TIMESTAMP(MAX(x.todesdatum)),                    UNIX_TIMESTAMP(MAX(sit.lastTumorstatus)),                    UNIX_TIMESTAMP(MAX(nnachsorge.datum))                )            )                                                           AS '043_ende'",            "IF(sit.datum_sicherung_rezidiv_metast IS NOT NULL, 1, 0)   AS '044_ereignis'",            "IF(                sit.datum_sicherung_rezidiv_metast IS NOT NULL,                UNIX_TIMESTAMP(sit.datum_sicherung_rezidiv_metast),                CONCAT_WS('|',                    UNIX_TIMESTAMP(MAX(x.todesdatum)),                    UNIX_TIMESTAMP(MAX(sit.lastTumorstatus)),                    UNIX_TIMESTAMP(MAX(nnachsorge.datum))                )            )                                                           AS '044_ende'",            "IF(MAX(x.todesdatum) IS NOT NULL, 1, 0)                    AS '045_ereignis'",            "UNIX_TIMESTAMP(sit.datum_sicherung_rezidiv)                AS '045_beginn'",            "IF(                MAX(x.todesdatum) IS NOT NULL,                UNIX_TIMESTAMP(MAX(x.todesdatum)),                CONCAT_WS('|',                    UNIX_TIMESTAMP(MAX(sit.lastTumorstatus)),                    UNIX_TIMESTAMP(MAX(nnachsorge.datum))                )            )                                                           AS '045_ende'",        );        if ($this->_params['name'] == 'd04_1') {            foreach ($additionalContent['fields'] as $fieldIndex => $cond) {                $additionalContent['fields'][$fieldIndex] = str_replace('UNIX_TIMESTAMP', '', $cond);            }            $additionalContent['fields'][] = 'sit.patient_nr';            $additionalContent['fields'][] = 'null as addon';        }        $datasets = $this->loadRessource('d01', $additionalContent);        foreach ($datasets as $i => $patientDataset) {            if ((int) $patientDataset['primaerfall'] != 1) {                unset($datasets[$i]);                continue;            }            $hBeginn = $patientDataset['h_beginn'];            $section = $this->_getUiccSection($patientDataset['uicc']);            $datasets[$i]['addon'] = $tmp = array(                '041_ereignis'  => $patientDataset['041_ereignis'],                '041_beginn'    => $hBeginn,                '041_ende'      => $this->_getLastDate($patientDataset['041_ende']),                '042_ereignis'  => $patientDataset['042_ereignis'],                '042_beginn'    => $hBeginn,                '042_ende'      => $this->_getLastDate($patientDataset['042_ende']),                '043_ereignis'  => $patientDataset['043_ereignis'],                '043_beginn'    => $hBeginn,                '043_ende'      => $this->_getLastDate($patientDataset['043_ende']),                '044_ereignis'  => $patientDataset['044_ereignis'],                '044_beginn'    => $hBeginn,                '044_ende'      => $this->_getLastDate($patientDataset['044_ende']),                '045_ereignis'  => $patientDataset['045_ereignis'],                '045_beginn'    => $patientDataset['045_beginn'],                '045_ende'      => $this->_getLastDate($patientDataset['045_ende']),                'section'       => $section            );            //Für die ersten 4 Auswertungen muss jeweils der uicc Bereich vorhanden sein!            if (strlen($tmp['section']) > 0) {                //Dauer berechnen                for ($i=1;$i<=4; $i++) {                    if (strlen($tmp["04{$i}_beginn"]) > 0 && strlen($tmp["04{$i}_ende"]) > 0) {                        $tmp["04{$i}_dauer"] = ($tmp["04{$i}_ende"] - $tmp["04{$i}_beginn"]) / 86400 / 30.4375;                    } else {                        $tmp["04{$i}_dauer"] = null;                    }                    if (strlen($tmp["04{$i}_dauer"]) > 0 && strlen($tmp["section"]) > 0) {                        $this->_values["04{$i}"]['range'][] = $tmp["04{$i}_dauer"];                        $this->_values["04{$i}"]['event'][] = $tmp["04{$i}_ereignis"];                        $this->_values["04{$i}"]['legend'][] = $tmp["section"];                    }                }            }            $tmp["045_dauer"] = (strlen($tmp["045_beginn"]) > 0 && strlen($tmp["045_ende"]) > 0) === true               ? ($tmp["045_ende"] - $tmp["045_beginn"]) / 86400 / 30.4375               : null            ;            if ($tmp["045_dauer"] !== null) {                $this->_values["045"]['range'][] = $tmp["045_dauer"];                $this->_values["045"]['event'][] = $tmp["045_ereignis"];            }        }        switch ($this->_params['name']) {            case 'd04':                require_once 'reports/pdf/d/d04/p1.php';                break;            case 'd04_1':                $this->_data  = $this->_convertD041ReportData($datasets);                $this->writeXLS('d01');                break;        }    }    /**     * Convert data for d04.1 report     *     * @param $data     */    protected function _convertD041ReportData($data)    {        foreach ($data as &$dataset) {            $addon = $dataset['addon'];            unset(                $dataset['primaerop_id'],                $dataset['patient_id'],                $dataset['erkrankung_id'],                $dataset['max_uicc'],                $dataset['anlass'],                $dataset['start_date'],                $dataset['end_date'],                $dataset['h_beginn'],                $dataset['041_ereignis'],                $dataset['041_ende'],                $dataset['042_ereignis'],                $dataset['042_ende'],                $dataset['043_ereignis'],                $dataset['043_ende'],                $dataset['044_ereignis'],                $dataset['044_ende'],                $dataset['045_ereignis'],                $dataset['045_beginn'],                $dataset['045_ende'],                $dataset['addon']            );            $dataset = array_merge($dataset, $addon);        }        return $data;    }}?>