<?php

/*
 * AlcedisMED
 * Copyright (C) 2010-2016  Alcedis GmbH
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */ 

class dkgOzValidations extends dkgBaseValidations implements dkgValidationsInterface
{
    /**
     * dkgOzValidations constructor.
     */
    public function __construct()
    {
        $this
            ->_setName('oz')
            ->_activateForDisease(array('b','d','gt','h','kh','leu','lg','lu','ly','m','nt','oes','p','pa','snst','sst'))
            ->registerValidations()
        ;
    }


    /**
     * @return $this
     */
    public function registerValidations()
    {
        // color field 'land' cyan, only if krbw or kr_he is activated
        if (str_contains(appSettings::get('interfaces'), array('krbw', 'kr_he')) === true) {
            $this
                ->addValidation(dkgValidation::create('patient')
                    ->addField(dkgValidationField::create('land')
                        ->setCheck(false)
                    )
                )
            ;
        }

        $this
            ->addValidation(dkgValidation::create('erkrankung')
                ->addField(dkgValidationField::create('erkrankung_relevant'))
            )
            ->addValidation(dkgValidation::create('vorlage_studie')
                ->addField(dkgValidationField::create('ethikvotum'))
            )
            ->addValidation(dkgValidation::create('diagnose')
                ->addField(dkgValidationField::create('datum'))
            )
            ->addValidation(dkgValidation::create('eingriff')
                ->addField(dkgValidationField::create('datum'))
                ->addField(dkgValidationField::create('notfall')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('art_primaertumor')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('art_rezidiv')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('art_revision')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('schnellschnitt')
                    ->setCheck(false)
                    ->setCondition('$org_id == "$patientOrgId" && in_array("1", array($art_primaertumor, $art_lk, $art_metastasen, $art_rezidiv, $art_nachresektion, $art_revision)) === true')
                )
                ->addField(dkgValidationField::create('schnellschnitt_dauer')
                    ->setCheck(false)
                    ->setCondition('$schnellschnitt == "1"')
                )
                ->addDlist(dkgValidation::create('eingriff_ops')
                    ->addField(dkgValidationField::create('prozedur'))
                )
            )
            ->addValidation(dkgValidation::create('komplikation')
                ->addField(dkgValidationField::create('komplikation'))
                ->addField(dkgValidationField::create('revisionsoperation'))
            )
            ->addValidation(dkgValidation::create('histologie')
                ->addField(dkgValidationField::create('datum'))
                ->addField(dkgValidationField::create('art'))
                ->addField(dkgValidationField::create('status_resektionsrand_organ')
                    ->setCheck(false)
                    ->setCondition('$art == "po"')
                )
                ->addField(dkgValidationField::create('status_resektionsrand_circumferentiell')
                    ->setCheck(false)
                    ->setCondition('$art == "po"')
                )
                ->addField(dkgValidationField::create('pt')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('pn')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('pm')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('g')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('lk_entf')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('lk_bef')
                    ->setCheck(false)
                )
            )
            ->addValidation(dkgValidation::create('untersuchung')
                ->addField(dkgValidationField::create('hno_untersuchung')
                    ->setCheck(false)
                )
            )
            ->addValidation(dkgValidation::create('therapieplan')
                ->addField(dkgValidationField::create('datum'))
                ->addField(dkgValidationField::create('grundlage'))
                ->addField(dkgValidationField::create('zeitpunkt'))
                ->addField(dkgValidationField::create('konferenz_patient_id')
                    ->setCondition('$grundlage == "tk" && appSettings::get("konferenz") === true')
                )
            )
            ->addValidation(dkgValidation::create('therapie_systemisch')
                ->addField(dkgValidationField::create('intention'))
                ->addField(dkgValidationField::create('zahnarzt')
                    ->setCheck(false)
                )
            )
            ->addValidation(dkgValidation::create('strahlentherapie')
                ->addField(dkgValidationField::create('beginn'))
                ->addField(dkgValidationField::create('zahnarzt')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('unterbrechung')
                    ->setCheck(false)
                )
            )
            ->addValidation(dkgValidation::create('nebenwirkung')
                ->addField(dkgValidationField::create('nci_code'))
                ->addField(dkgValidationField::create('zusammenhang'))
                ->addField(dkgValidationField::create('therapie_systemisch_id')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('strahlentherapie_id')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('sonstige_therapie_id')
                    ->setCheck(false)
                )
            )
            ->addValidation(dkgValidation::create('studie')
                ->addField(dkgValidationField::create('vorlage_studie_id'))
                ->addField(dkgValidationField::create('date')
                    ->setCondition('strlen($beginn) == 0')
                )
                ->addField(dkgValidationField::create('beginn')
                    ->setCondition('strlen($date) == 0')
                )
            )
            ->addValidation(dkgValidation::create('beratung')
                ->addField(dkgValidationField::create('datum'))
                ->addField(dkgValidationField::create('psychoonkologie'))
                ->addField(dkgValidationField::create('sozialdienst'))
            )
            ->addValidation(dkgValidation::create('fragebogen')
                ->addField(dkgValidationField::create('datum'))
            )
            ->addValidation(dkgValidation::create('nachsorge')
                ->addField(dkgValidationField::create('datum'))
            )
            ->addValidation(dkgValidation::create('abschluss')
                ->addField(dkgValidationField::create('abschluss_grund'))
                ->addField(dkgValidationField::create('todesdatum')
                    ->setCheck(false)
                    ->setCondition('$abschluss_grund == "tot"')
                )
                ->addField(dkgValidationField::create('tod_tumorassoziation')
                    ->setCheck(false)
                    ->setCondition('$abschluss_grund == "tot"')
                )
            )
            ->addValidation(dkgValidation::create('tumorstatus')
                ->addField(dkgValidationField::create('datum_sicherung'))
                ->addField(dkgValidationField::create('sicherungsgrad'))
                ->addField(dkgValidationField::create('datum_beurteilung'))
                ->addField(dkgValidationField::create('anlass'))
                ->addField(dkgValidationField::create('diagnose'))
                ->addField(dkgValidationField::create('morphologie'))
                ->addField(dkgValidationField::create('t'))
                ->addField(dkgValidationField::create('n'))

                ->addField(dkgValidationField::create('rezidiv_lokal')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('rezidiv_lk')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('rezidiv_metastasen')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('nur_zweitmeinung')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('nur_diagnosesicherung')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('kein_fall')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('lk_entf')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('lk_bef')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('ppn')
                    ->exclude('d')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('l')
                    ->setCondition('substr($t, 0, 1) == "p"')
                )
                ->addField(dkgValidationField::create('v')
                    ->setCondition('substr($t, 0, 1) == "p"')
                )
                ->addField(dkgValidationField::create('r_lokal')
                    ->setCheck(false)
                    ->setCondition('substr($t, 0, 1) == "p"')
                )
                ->addField(dkgValidationField::create('resektionsrand')
                    ->exclude('d')
                    ->setCheck(false)
                    ->setCondition('substr($t, 0, 1) == "p"')
                )
                ->addField(dkgValidationField::create('infiltration')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('befallen_n')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('befallen_m')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('invasionstiefe')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('uicc')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('lokalisation')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('m')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('g')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('groesse_x')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('groesse_y')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('groesse_z')
                    ->setCheck(false)
                )
            )
        ;

        return $this;
    }
}

?>
