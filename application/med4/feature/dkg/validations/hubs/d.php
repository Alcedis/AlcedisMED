<?php

/*
 * AlcedisMED
 * Copyright (C) 2010-2016  Alcedis GmbH
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */ 

class dkgDValidations extends dkgBaseValidations
{
    public function __construct()
    {
        $this
            ->_setName('d')
            ->_activateForDisease(array('d', 'pa'))
            ->registerValidations()
        ;
    }

    public function registerValidations()
    {
        $this
            ->addValidation(dkgValidation::create('erkrankung')
                ->addField(dkgValidationField::create('erkrankung_relevant'))
            )
            ->addValidation(dkgValidation::create('erkrankung_synchron')
                ->addField(dkgValidationField::create('erkrankung_synchron'))
            )
            ->addValidation(dkgValidation::create('vorlage_studie')
                ->addField(dkgValidationField::create('ethikvotum')
                     ->setCheck(false)
                )
                ->addField(dkgValidationField::create('studientyp')
                        ->setCheck(false)
                )
            )
            ->addValidation(dkgValidation::create('vorlage_therapie')
                ->addField(dkgValidationField::create('vorlage_therapie_id'))
                ->addDlist(dkgValidation::create('vorlage_therapie_wirkstoff')
                    ->addField(dkgValidationField::create('zyklus_beginn'))
                    ->addField(dkgValidationField::create('zyklus_anzahl'))
                )
            )
            ->addValidation(dkgValidation::create('patient')
                ->addField(dkgValidationField::create('patient'))
                ->addField(dkgValidationField::create('datenspeicherung')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('datenversand')
                    ->setCheck(false)
                )
            )
            ->addValidation(dkgValidation::create('anamnese')
                ->addField(dkgValidationField::create('fb_dkg'))
                ->addField(dkgValidationField::create('fb_dkg_beurt')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('familien_karzinom'))
                ->addDlist(dkgValidation::create('anamnese_erkrankung')
                    ->addField(dkgValidationField::create('erkrankung'))
                    ->addField(dkgValidationField::create('morphologie')
                        ->setCheck(false)
                    )
                )
            )
            ->addValidation(dkgValidation::create('untersuchung')
                ->addField(dkgValidationField::create('art'))
                ->addField(dkgValidationField::create('datum'))
                ->addField(dkgValidationField::create('anlass'))
                ->addField(dkgValidationField::create('koloskopie_vollstaendig')
                    ->setCheck(false)
                    ->setCondition('in_array($art, array("1-650.x", "1-650.0","1-650.1", "1-650.2", "1-650.y", "1-652.1")) == true')
                )
                ->addField(dkgValidationField::create('ct_becken')
                    ->setCheck(false)
                    ->setCondition('in_array($art, array("3-206", "3-226", "3-e08.y", "3-e20.y")) == true')
                )
                ->addField(dkgValidationField::create('mesorektale_faszie')
                    ->setCheck(false)
                )
            )
            ->addValidation(dkgValidation::create('labor')
                ->addField(dkgValidationField::create('datum'))
            )
            ->addValidation(dkgValidation::create('diagnose')
                ->addField(dkgValidationField::create('datum'))
            )
            ->addValidation(dkgValidation::create('eingriff')
                ->addField(dkgValidationField::create('datum'))
                ->addField(dkgValidationField::create('datum')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('org_id')
                        ->setCondition('$org_id == "$patientOrgId" || strlen($org_id) == 0')
                )
                ->addField(dkgValidationField::create('operateur1_id')
                    ->setCondition('$org_id == "$patientOrgId" || strlen($org_id) == 0')
                )
                ->addField(dkgValidationField::create('operateur2_id')
                    ->setCheck(false)
                    ->setCondition('($org_id == "$patientOrgId" || strlen($org_id) == 0) && in_array("1", array($art_primaertumor, $art_lk, $art_metastasen, $art_rezidiv, $art_nachresektion, $art_revision)) === true')
                )
                ->addField(dkgValidationField::create('art_primaertumor')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('art_rezidiv')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('art_revision')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('schnellschnitt')
                    ->setCheck(false)
                    ->setCondition('$org_id == "$patientOrgId" && in_array("1", array($art_primaertumor, $art_lk, $art_metastasen, $art_rezidiv, $art_nachresektion, $art_revision)) === true')
                )
                ->addField(dkgValidationField::create('schnellschnitt_dauer')
                    ->setCheck(false)
                    ->setCondition('$schnellschnitt == "1"')
                )
                ->addField(dkgValidationField::create('tme')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('pme')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('ther_koloskopie_vollstaendig')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('stomaposition')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('mesorektale_faszie')
                    ->setCheck(false)
                )
                ->addDlist(dkgValidation::create('eingriff_ops')
                    ->addField(dkgValidationField::create('prozedur'))
                )
            )
            ->addValidation(dkgValidation::create('komplikation')
                ->addField(dkgValidationField::create('eingriff_id')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('komplikation'))
                ->addField(dkgValidationField::create('reintervention'))
                ->addField(dkgValidationField::create('antibiotikum'))
                ->addField(dkgValidationField::create('drainage_intervent')
                    ->setCheck(false)
                 )
                ->addField(dkgValidationField::create('drainage_transanal')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('revisionsoperation'))
                ->addField(dkgValidationField::create('wund_spuelung')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('wund_spreizung')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('wund_vac')
                    ->setCheck(false)
                )
            )
            ->addValidation(dkgValidation::create('histologie')
                ->addField(dkgValidationField::create('datum'))
                ->addField(dkgValidationField::create('art'))
                ->addField(dkgValidationField::create('resektionsrand_oral')
                    ->setCondition('$art != "pr" && strlen($unauffaellig) == 0')
                )
                ->addField(dkgValidationField::create('resektionsrand_aboral')
                    ->setCondition('$art != "pr" && strlen($unauffaellig) == 0')
                )
                ->addField(dkgValidationField::create('resektionsrand_lateral')
                    ->setCondition('$art != "pr" && strlen($unauffaellig) == 0')
                )
                ->addField(dkgValidationField::create('morphologie')
                    ->setCondition('$unauffaellig != 1')
                )
                ->addField(dkgValidationField::create('status_resektionsrand_organ')
                    ->setCondition('$art == "po"')
                )
                ->addField(dkgValidationField::create('status_resektionsrand_circumferentiell')
                    ->setCondition('$art == "po"')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('mercury')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('g')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('msi_mutation')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('msi')
                    ->setCondition('$art == "po"')
                    ->setCheck(false)
                )
            )
            ->addValidation(dkgValidation::create('therapieplan')
                ->addField(dkgValidationField::create('datum'))
                ->addField(dkgValidationField::create('grundlage'))
                ->addField(dkgValidationField::create('zeitpunkt'))
                ->addField(dkgValidationField::create('abweichung_leitlinie'))
                ->addField(dkgValidationField::create('konferenz_patient_id')
                   ->setCondition('$grundlage == "tk" && appSettings::get("konferenz") === true')
                )
            )
            ->addValidation(dkgValidation::create('therapie_systemisch')
                ->addField(dkgValidationField::create('intention'))
                ->addField(dkgValidationField::create('beginn'))
                ->addField(dkgValidationField::create('endstatus'))
                ->addField(dkgValidationField::create('metastasentherapie'))
            )
            ->addValidation(dkgValidation::create('strahlentherapie')
                ->addField(dkgValidationField::create('intention'))
                ->addField(dkgValidationField::create('beginn'))
                ->addField(dkgValidationField::create('einzeldosis'))
                ->addField(dkgValidationField::create('gesamtdosis'))
                ->addField(dkgValidationField::create('boost'))
                ->addField(dkgValidationField::create('boostdosis')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('endstatus'))
            )
            ->addValidation(dkgValidation::create('nebenwirkung')
                ->addField(dkgValidationField::create('nci_code'))
                ->addField(dkgValidationField::create('zusammenhang'))
                ->addField(dkgValidationField::create('therapie_systemisch_id')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('strahlentherapie_id')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('sonstige_therapie_id')
                    ->setCheck(false)
                )
            )
            ->addValidation(dkgValidation::create('studie')
                ->addField(dkgValidationField::create('vorlage_studie_id'))
                ->addField(dkgValidationField::create('date')
                    ->setCondition('strlen($beginn) == 0')
                )
                ->addField(dkgValidationField::create('beginn')
                    ->setCondition('strlen($date) == 0')
                )
            )
            ->addValidation(dkgValidation::create('beratung')
                ->addField(dkgValidationField::create('datum'))
                ->addField(dkgValidationField::create('psychoonkologie'))
                ->addField(dkgValidationField::create('psychoonkologie_dauer')
                    ->setCondition('$psychoonkologie == 1')
                )
                ->addField(dkgValidationField::create('sozialdienst'))
                ->addField(dkgValidationField::create('fam_risikosprechstunde'))
                ->addField(dkgValidationField::create('fam_risikosprechstunde_erfolgt')
                    ->setCheck(false)
                )
            )
            ->addValidation(dkgValidation::create('fragebogen')
                ->addField(dkgValidationField::create('datum'))
            )
            ->addValidation(dkgValidation::create('aufenthalt')
                ->addField(dkgValidationField::create('aufnahmedatum'))
            )
            ->addValidation(dkgValidation::create('abschluss')
                ->addField(dkgValidationField::create('abschluss_grund'))
                ->addField(dkgValidationField::create('todesdatum')
                    ->setCheck(false)
                    ->setCondition('$abschluss_grund == "tot"')
                )
                ->addField(dkgValidationField::create('tod_tumorassoziation')
                    ->setCheck(false)
                    ->setCondition('$abschluss_grund == "tot"')
                )
            )
            ->addValidation(dkgValidation::create('tumorstatus')
                ->addField(dkgValidationField::create('datum_sicherung'))
                ->addField(dkgValidationField::create('sicherungsgrad'))
                ->addField(dkgValidationField::create('datum_beurteilung'))
                ->addField(dkgValidationField::create('anlass'))
                ->addField(dkgValidationField::create('zweittumor')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('diagnose'))
                ->addField(dkgValidationField::create('diagnose_c19_zuordnung')
                    ->setCondition('in_array($diagnose, array("C19", "D01.1")) == true')
                )
                ->addField(dkgValidationField::create('hoehe')
                    ->setCondition('$diagnose_c19_zuordnung == "C20" || ($diagnose == "D01.2" || substr($diagnose, 0,3) == "C20")')
                )
                ->addField(dkgValidationField::create('rezidiv_lokal')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('rezidiv_lk')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('rezidiv_metastasen')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('rezidiv_psa')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('fall_vollstaendig')
                        ->setCheck(false)
                )
                ->addField(dkgValidationField::create('nur_zweitmeinung')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('nur_diagnosesicherung')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('kein_fall')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('lk_entf')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('lk_bef')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('lokalisation')
                    ->setCheck(false)
                )
                ->addField(dkgValidationField::create('morphologie'))
                ->addField(dkgValidationField::create('t'))
                ->addField(dkgValidationField::create('n'))
                ->addField(dkgValidationField::create('m'))
                ->addField(dkgValidationField::create('uicc')
                    ->setCondition('strlen($t) == 0 || strlen($n) == 0 || strlen($m) == 0')
                )
                ->addField(dkgValidationField::create('g')
                    ->setCondition('substr($t, 0, 1) == "p" && in_array($tnm_praefix, array("y", "yr")) === false')
                )
                ->addField(dkgValidationField::create('l')
                    ->setCondition('substr($t, 0, 1) == "p"')
                )
                ->addField(dkgValidationField::create('v')
                    ->setCondition('substr($t, 0, 1) == "p"')
                )
                ->addField(dkgValidationField::create('r')
                    ->setCheck(false)
                    ->setCondition('substr($t, 0, 1) == "p"')
                )
                ->addField(dkgValidationField::create('r_lokal')
                    ->setCheck(false)
                    ->setCondition('substr($t, 0, 1) == "p"')
                )
                ->addField(dkgValidationField::create('ppn')
                    ->setCheck(false)
                    ->exclude('d')
                )
                ->addDlist(dkgValidation::create('tumorstatus_metastasen')
                    ->addField(dkgValidationField::create('lokalisation'))
                    ->addField(dkgValidationField::create('resektabel')
                        ->setCheck(false)
                    )
                )
            )
            ->addValidation(dkgValidation::create('nachsorge')
                ->addField(dkgValidationField::create('datum'))
                ->addField(dkgValidationField::create('malignom')
                    ->setCheck(false)
                )
            )
        ;

        return $this;
    }
}

?>
